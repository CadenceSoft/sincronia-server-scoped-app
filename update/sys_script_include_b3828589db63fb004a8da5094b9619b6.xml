<?xml version="1.0" encoding="UTF-8"?><record_update table="sys_script_include">
    <sys_script_include action="INSERT_OR_UPDATE">
        <access>public</access>
        <active>true</active>
        <api_name>x_nuvo_sinc.SincUtils</api_name>
        <client_callable>false</client_callable>
        <description/>
        <name>SincUtils</name>
        <script><![CDATA["use strict";

function _typeof(obj) {
  if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") {
    _typeof = function _typeof(obj) {
      return typeof obj;
    };
  } else {
    _typeof = function _typeof(obj) {
      return obj &&
        typeof Symbol === "function" &&
        obj.constructor === Symbol &&
        obj !== Symbol.prototype
        ? "symbol"
        : typeof obj;
    };
  }
  return _typeof(obj);
}

function _classCallCheck(instance, Constructor) {
  if (!(instance instanceof Constructor)) {
    throw new TypeError("Cannot call a class as a function");
  }
}

function _possibleConstructorReturn(self, call) {
  if (call && (_typeof(call) === "object" || typeof call === "function")) {
    return call;
  }
  return _assertThisInitialized(self);
}

function _assertThisInitialized(self) {
  if (self === void 0) {
    throw new ReferenceError(
      "this hasn't been initialised - super() hasn't been called"
    );
  }
  return self;
}

function _getPrototypeOf(o) {
  _getPrototypeOf = Object.setPrototypeOf
    ? Object.getPrototypeOf
    : function _getPrototypeOf(o) {
        return o["__proto-sn__"] || Object.getPrototypeOf(o);
      };
  return _getPrototypeOf(o);
}

function _inherits(subClass, superClass) {
  if (typeof superClass !== "function" && superClass !== null) {
    throw new TypeError("Super expression must either be null or a function");
  }
  subClass.prototype = Object.create(superClass && superClass.prototype, {
    constructor: { value: subClass, writable: true, configurable: true }
  });
  if (superClass) _setPrototypeOf(subClass, superClass);
}

function _setPrototypeOf(o, p) {
  _setPrototypeOf =
    Object.setPrototypeOf ||
    function _setPrototypeOf(o, p) {
      o["__proto-sn__"] = p;
      return o;
    };
  return _setPrototypeOf(o, p);
}

var SincUtils =
  /*#__PURE__*/
  (function(_SincUtilsMS) {
    _inherits(SincUtils, _SincUtilsMS);

    function SincUtils() {
      _classCallCheck(this, SincUtils);

      return _possibleConstructorReturn(
        this,
        _getPrototypeOf(SincUtils).apply(this, arguments)
      );
    }

    return SincUtils;
  })(SincUtilsMS);
]]></script>
        <sys_class_name>sys_script_include</sys_class_name>
        <sys_created_by>Breyton.Barber@Nuvolo.com</sys_created_by>
        <sys_created_on>2019-08-26 21:51:58</sys_created_on>
        <sys_customer_update>false</sys_customer_update>
        <sys_id>b3828589db63fb004a8da5094b9619b6</sys_id>
        <sys_mod_count>2</sys_mod_count>
        <sys_name>SincUtils</sys_name>
        <sys_package display_value="Sincronia" source="x_nuvo_sinc">cd628585db63fb004a8da5094b96198c</sys_package>
        <sys_policy>read</sys_policy>
        <sys_replace_on_upgrade>false</sys_replace_on_upgrade>
        <sys_scope display_value="Sincronia">cd628585db63fb004a8da5094b96198c</sys_scope>
        <sys_update_name>sys_script_include_b3828589db63fb004a8da5094b9619b6</sys_update_name>
        <sys_updated_by>Breyton.Barber@nuvolo.com</sys_updated_by>
        <sys_updated_on>2019-08-26 22:27:37</sys_updated_on>
    </sys_script_include>
</record_update>
